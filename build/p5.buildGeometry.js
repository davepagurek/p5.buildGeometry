!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.GeometryBuilder=e():t.GeometryBuilder=e()}(self,(()=>(()=>{"use strict";var t={};return((t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.buildGeometry=e.GeometryBuilder=void 0;class r{constructor(t,e){this.p5=t,this.geometry=new t.constructor.Geometry(1,1),this.geometry.gid=e,this.stack=[new DOMMatrix],this.scratch=this.p5.createGraphics(1,1,this.p5.WEBGL);const r=this.scratch._renderer;r.drawBuffersScaled=(t,e,s,i)=>{const o=r.retainedMode.geometry[t].model;this.push(),this.scale(e,s,i),this.model(o),this.pop()},r.drawBuffers=t=>{const e=r.retainedMode.geometry[t].model;this.push(),this.applyMatrix(...r.uMVMatrix.mat4),this.model(e),this.pop()}}get(){return this.scratch.remove(),this.geometry}addGeometry(t){const e=this.geometry.vertices.length;this.geometry.vertices.push(...t.vertices.map((t=>{const e=this.transform().transformPoint(new DOMPoint(t.x,t.y,t.z,1));return this.p5.createVector(e.x,e.y,e.z)})));const r=this.normalMatrix();this.geometry.vertexNormals.push(...t.vertexNormals.map((t=>{const e=r.transformPoint(new DOMPoint(t.x,t.y,t.z,0));return this.p5.createVector(e.x,e.y,e.z)}))),this.geometry.faces.push(...t.faces.map((t=>t.map((t=>t+e))))),this.geometry.uvs.push(...t.uvs),this.geometry.edges.push(...t.edges.map((t=>t.map((t=>t+e))))),this.geometry.vertexColors.push(...t.vertexColors)}model(t){this.addGeometry(t)}beginShape(...t){this.scratch.beginShape(...t)}endShape(...t){this.scratch.endShape(...t);const e=this.scratch._renderer.immediateMode.geometry,r=[];for(let t=0;t<e.vertices.length;t+=3)r.push([t,t+1,t+2]);this.addGeometry(Object.assign(Object.assign({},e),{faces:r}))}vertex(...t){this.scratch.vertex(...t)}bezierVertex(...t){this.scratch.bezierVertex(...t)}quadraticVertex(...t){this.scratch.quadraticVertex(...t)}curveVertex(...t){this.scratch.curveVertex(...t)}curveTightness(...t){this.scratch.curveTightness(...t)}normal(...t){this.scratch.normal(...t)}fill(...t){this.scratch.fill(...t)}plane(...t){this.scratch.plane(...t)}box(...t){this.scratch.box(...t)}sphere(...t){this.scratch.sphere(...t)}cylinder(...t){this.scratch.cylinder(...t)}cone(...t){this.scratch.cone(...t)}torus(...t){this.scratch.torus(...t)}triangle(...t){this.scratch.triangle(...t)}ellipse(...t){this.scratch.ellipse(...t)}arc(...t){this.scratch.arc(...t)}rectMode(t){this.scratch.rectMode(t)}rect(...t){this.scratch.rect(...t)}quad(...t){this.scratch.quad(...t)}bezier(...t){this.scratch.bezier(...t)}curve(...t){this.scratch.curve(...t)}line(...t){this.scratch.line(...t)}transform(){return this.stack[this.stack.length-1]}normalMatrix(){const t=this.transform(),e=new DOMMatrix([t.m11,t.m12,t.m13,0,t.m21,t.m22,t.m23,0,t.m31,t.m32,t.m33,0,0,0,0,1]).inverse();return new DOMMatrix([e.m11,e.m21,e.m31,0,e.m12,e.m22,e.m32,0,e.m13,e.m23,e.m33,0,0,0,0,1])}push(){this.stack.push(DOMMatrix.fromMatrix(this.transform())),this.scratch.push()}pop(){if(this.stack.length<1)throw new Error("You called pop() but nothing was push()ed. Check that your push/pop calls are not mismatched.");this.stack.pop(),this.scratch.pop()}translate(t,e,r=0){this.transform().translateSelf(t,e,r)}scale(t,e,r){void 0===e&&void 0===r?(e=t,r=t):void 0===r&&(r=1),this.transform().scaleSelf(t,e,r)}rotate(t){this.rotateZ(t)}rotateX(t){this.transform().rotateSelf(t*(180/Math.PI),0,0)}rotateY(t){this.transform().rotateSelf(0,t*(180/Math.PI),0)}rotateZ(t){this.transform().rotateSelf(0,0,t*(180/Math.PI))}applyMatrix(...t){this.stack.pop(),this.stack.push(new DOMMatrix(t))}resetMatrix(){this.stack.pop(),this.stack.push(new DOMMatrix)}}function s(t){t.gid?this._renderer._freeBuffers(t.gid):console.error("The model you passed to freeModel does not have an id!")}e.GeometryBuilder=r,e.buildGeometry=(t,e,s)=>{const i=new r(t,e);return s(i),i.get()},p5.prototype.buildGeometry=function(t,r){return(0,e.buildGeometry)(this,t,r)},p5.Graphics.prototype.buildGeometry=function(t,r){return(0,e.buildGeometry)(this,t,r)},p5.prototype.freeGeometry=s,p5.Graphics.prototype.freeGeometry=s})(0,t),t})()));